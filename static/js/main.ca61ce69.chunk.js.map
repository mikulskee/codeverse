{"version":3,"sources":["img/bg_back.png","img/logo-main_1.png","components/Header.js","components/Main.js","templates/MainTemplate.js","App.js","serviceWorker.js","index.js","img/bg_front.png"],"names":["module","exports","Wrapper","styled","header","bgBack","bgFront","Header","className","src","logo","alt","main","Main","MainTemplate","useState","touchEnd","setTouchEnd","touchStart","setTouchStart","useEffect","window","addEventListener","debounce","e","deltaY","document","querySelector","classList","add","remove","changedTouches","clientY","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,+iCCM3C,IAAMC,EAAUC,IAAOC,OAAV,IAQaC,IAaEC,KAiCbC,EAVA,WACb,OACE,kBAACL,EAAD,CAASM,UAAW,UAClB,yBAAKA,UAAW,WAAYC,IAAKH,MACjC,yBAAKE,UAAW,YAChB,yBAAKC,IAAKC,IAAMC,IAAI,O,kVCpD1B,IAAMT,EAAUC,IAAOS,KAAV,KAwBEC,EARF,WACX,OACE,kBAAC,EAAD,CAASL,UAAW,QAClB,4BAAK,kB,gBCgCIM,EAjDM,WAAO,IAAD,EACOC,qBADP,mBAClBC,EADkB,KACRC,EADQ,OAEWF,qBAFX,mBAElBG,EAFkB,KAENC,EAFM,KAyCzB,OArCAC,qBAAU,WACRC,OAAOC,iBACL,QACAC,KAAS,SAAAC,GACHA,EAAEC,OAAS,GACbC,SAASC,cAAc,UAAUC,UAAUC,IAAI,UAC/CH,SAASC,cAAc,aAAaC,UAAUC,IAAI,UAClDH,SAASC,cAAc,QAAQC,UAAUC,IAAI,YAE7CH,SAASC,cAAc,UAAUC,UAAUE,OAAO,UAClDJ,SAASC,cAAc,QAAQC,UAAUE,OAAO,UAChDJ,SAASC,cAAc,aAAaC,UAAUE,OAAO,aAEtD,OAEJ,IACHV,oBACEG,KAAS,WACPF,OAAOC,iBAAiB,cAAc,SAAAE,GACpCL,EAAcK,EAAEO,eAAe,GAAGC,YAEpCX,OAAOC,iBAAiB,YAAY,SAAAE,GAClCP,EAAYO,EAAEO,eAAe,GAAGC,YAG9Bd,EAAaF,GACfU,SAASC,cAAc,UAAUC,UAAUC,IAAI,UAC/CH,SAASC,cAAc,QAAQC,UAAUC,IAAI,UAC7CH,SAASC,cAAc,aAAaC,UAAUC,IAAI,YAElDH,SAASC,cAAc,UAAUC,UAAUE,OAAO,UAClDJ,SAASC,cAAc,QAAQC,UAAUE,OAAO,UAChDJ,SAASC,cAAc,aAAaC,UAAUE,OAAO,aAEtD,IACH,CAACd,EAAUE,IAGX,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QC1CSe,EAJH,WACV,OAAO,kBAAC,EAAD,OCQWC,QACW,cAA7Bb,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBEnInB9C,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.ca61ce69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg_back.d1f5b0bd.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-main_1.026c5ab5.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport bgBack from \"../img/bg_back.png\";\r\nimport bgFront from \"../img/bg_front.png\";\r\nimport logo from \"../img/logo-main_1.png\";\r\n\r\nconst Wrapper = styled.header`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translateY(0);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  opacity: 1;\r\n  background-image: url(${bgBack});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  transition: all 0.5s ease-out;\r\n\r\n  .bg-front {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translateY(0);\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-image: url(${bgFront});\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    transition: transform 0.5s ease-out;\r\n\r\n    &.active {\r\n      transform: translateY(-30%);\r\n    }\r\n  }\r\n\r\n  &.active {\r\n    transform: translateY(-15%);\r\n\r\n    opacity: 0;\r\n  }\r\n\r\n  img {\r\n    margin: 30px;\r\n    width: 140px;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Wrapper className={\"header\"}>\r\n      <div className={\"bg-front\"} src={bgFront} />\r\n      <div className={\"bg-mask\"} />\r\n      <img src={logo} alt=\"\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.main`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translateY(100%);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #040519;\r\n  transition: transform 0.5s ease-out;\r\n  h1 {\r\n    color: #e7e7e7;\r\n  }\r\n  &.active {\r\n    transform: translateY(0);\r\n  }\r\n`;\r\nconst Main = () => {\r\n  return (\r\n    <Wrapper className={\"main\"}>\r\n      <h1>{\"{ Projects }\"}</h1>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Main from \"../components/Main\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nconst MainTemplate = () => {\r\n  const [touchEnd, setTouchEnd] = useState();\r\n  const [touchStart, setTouchStart] = useState();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\r\n      \"wheel\",\r\n      debounce(e => {\r\n        if (e.deltaY > 0) {\r\n          document.querySelector(\"header\").classList.add(\"active\");\r\n          document.querySelector(\".bg-front\").classList.add(\"active\");\r\n          document.querySelector(\"main\").classList.add(\"active\");\r\n        } else {\r\n          document.querySelector(\"header\").classList.remove(\"active\");\r\n          document.querySelector(\"main\").classList.remove(\"active\");\r\n          document.querySelector(\".bg-front\").classList.remove(\"active\");\r\n        }\r\n      }, 50)\r\n    );\r\n  }, []);\r\n  useEffect(\r\n    debounce(() => {\r\n      window.addEventListener(\"touchstart\", e => {\r\n        setTouchStart(e.changedTouches[0].clientY);\r\n      });\r\n      window.addEventListener(\"touchend\", e => {\r\n        setTouchEnd(e.changedTouches[0].clientY);\r\n      });\r\n\r\n      if (touchStart > touchEnd) {\r\n        document.querySelector(\"header\").classList.add(\"active\");\r\n        document.querySelector(\"main\").classList.add(\"active\");\r\n        document.querySelector(\".bg-front\").classList.add(\"active\");\r\n      } else {\r\n        document.querySelector(\"header\").classList.remove(\"active\");\r\n        document.querySelector(\"main\").classList.remove(\"active\");\r\n        document.querySelector(\".bg-front\").classList.remove(\"active\");\r\n      }\r\n    }, 50),\r\n    [touchEnd, touchStart]\r\n  );\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;\r\n","import React from \"react\";\r\nimport MainTemplate from \"./templates/MainTemplate\";\r\n\r\nconst App = () => {\r\n  return <MainTemplate />;\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg_front.d0b398e5.png\";"],"sourceRoot":""}